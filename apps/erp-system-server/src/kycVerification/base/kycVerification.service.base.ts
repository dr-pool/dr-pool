/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  KycVerification as PrismaKycVerification,
} from "@prisma/client";

export class KycVerificationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.KycVerificationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.kycVerification.count(args);
  }

  async kycVerifications(
    args: Prisma.KycVerificationFindManyArgs
  ): Promise<PrismaKycVerification[]> {
    return this.prisma.kycVerification.findMany(args);
  }
  async kycVerification(
    args: Prisma.KycVerificationFindUniqueArgs
  ): Promise<PrismaKycVerification | null> {
    return this.prisma.kycVerification.findUnique(args);
  }
  async createKycVerification(
    args: Prisma.KycVerificationCreateArgs
  ): Promise<PrismaKycVerification> {
    return this.prisma.kycVerification.create(args);
  }
  async updateKycVerification(
    args: Prisma.KycVerificationUpdateArgs
  ): Promise<PrismaKycVerification> {
    return this.prisma.kycVerification.update(args);
  }
  async deleteKycVerification(
    args: Prisma.KycVerificationDeleteArgs
  ): Promise<PrismaKycVerification> {
    return this.prisma.kycVerification.delete(args);
  }
}
